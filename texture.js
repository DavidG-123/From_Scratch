var vOne = 0;
var vTwo = [];
var vThree = 0;

const bricks_bitmap = [
[
    0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,
],
[
    0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,
],
[
    0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,
],
[
    0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,0,"f","f","f","f","f","f",0,
],
[
    0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,0,"f","f","f","f","f","f",0,0,0,0,0,0,0,0,0,
]
]

var bm = [];
var realbm = [];
var mpState = 0;


function bit_textures(seq,rectHeight,vertOffset) {
    bm = [];
    let ty = 0, ty_step = (rectHeight/32);
    for (v=0; v<seq.length; v++){
        for (n=0; n<seq[v]; n++){
            vTwo.push(Math.floor((32/seq[v])*(n+1)));
            ty = 0, ty_step = (rectHeight/32);
            for (c=0; c<bricks_bitmap[vTwo[v]-1].length; c++){
                pix = String(bricks_bitmap[vTwo[v]-1][c]);
                bm.push(pix);
            }
        }
    }
    pix = bm;
    vThree++
    if (vThree==60-vFour) {vThree=0}
    vTwo=[];
    vTwo=[];
}